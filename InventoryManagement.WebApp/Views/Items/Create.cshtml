@model ItemViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IHtmlLocalizer<InventoryManagement.WebApp.Controllers.InventoriesController> InventoriesLocalizer

@{
    // ViewData["Title"] = $"{InventoriesLocalizer["Add New Item to"]} {Model.Inventory?.Title}";
}

<h1>@ViewData["Title"]</h1>
<hr />

<form asp-action="Create" method="post">
    <div asp-validation-summary="All" class="text-danger"></div>
    <input type="hidden" asp-for="InventoryId" />

    <div class="row">
        <div class="col-md-8">

            @foreach (var field in Model.OrderedFields)
            {
                @if (field.State) // Only render the field if it's enabled
                {
                    var fieldName = field.Name ?? "";
                    var fieldKey = field.FieldKey;

                    @if (field.FieldType == "Select from List")
                    {
                        var options = (field.Options ?? "").Split(',', StringSplitOptions.RemoveEmptyEntries).Select(o => o.Trim());
                        <div class="mb-3">
                            <label class="form-label">@fieldName</label>
                            <select name="Item.@(fieldKey.Replace("csel", "CustomSelect") + "Value")" class="form-select">
                                <option value="">-- @InventoriesLocalizer["Select"] --</option>
                                @foreach (var option in options)
                                {
                                    <option value="@option">@option</option>
                                }
                            </select>
                        </div>
                    }
                    else if (field.FieldType == "Multi-Line Text")
                    {
                        <div class="mb-3">
                            <label class="form-label">@fieldName</label>
                            <textarea name="Item.@(fieldKey.Replace("ct", "CustomText") + "Value")" class="form-control" rows="3"></textarea>
                        </div>
                    }
                    else if (field.FieldType == "Checkbox (Yes/No)")
                    {
                        <div class="mb-3 form-check">
                            <input name="Item.@(fieldKey.Replace("cb", "CustomBool") + "Value")" type="checkbox" class="form-check-input" value="true" />
                            <label class="form-check-label">@fieldName</label>
                        </div>
                    }
                    else // Covers String, Numeric, and Link types
                    {
                        var inputType = field.FieldType == "Numeric" ? "number" : (field.FieldType.Contains("Link") ? "url" : "text");
                        var valuePropName = "Item." + (fieldKey.Replace("cs", "CustomString").Replace("cn", "CustomNumeric").Replace("cl", "CustomLink") + "Value");

                        <div class="mb-3">
                            <label class="form-label">@fieldName</label>

                            <input name="@valuePropName" type="@inputType" class="form-control"
                                   maxlength="@field.MaxLength"
                                   pattern="@field.Regex"
                                   min="@(field.MinValue.HasValue? field.MinValue.Value.ToString(System.Globalization.CultureInfo.InvariantCulture) : null)"
                                   max="@(field.MaxValue.HasValue? field.MaxValue.Value.ToString(System.Globalization.CultureInfo.InvariantCulture) : null)"
                                   step="@(inputType == "number" ? "any" : null)"
                                   title="@(string.IsNullOrEmpty(field.Regex) ? "" : $"Must match the format: {field.Regex}")" />
                            <span asp-validation-for="@valuePropName" class="text-danger"></span>
                        </div>
                    }
                }
            }
        </div>
    </div>

    <div class="form-group mt-3">
        <input type="submit" value="@InventoriesLocalizer["Create Item"]" class="btn btn-primary" />
        <a asp-controller="Inventories" asp-action="Details" asp-route-id="@Model.InventoryId" class="btn btn-secondary">@InventoriesLocalizer["Cancel"]</a>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}