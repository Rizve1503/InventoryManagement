@model InventoryManagement.WebApp.ViewModels.InventoryViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IHtmlLocalizer<InventoryManagement.WebApp.Controllers.InventoriesController> InventoriesLocalizer

@{
    ViewData["Title"] = "Edit Inventory";
}

<h1> @InventoriesLocalizer["Edit Inventory"]</h1>
<hr />
<div class="row">
    <div class="col-md-6">
        <form asp-action="Edit" enctype="multipart/form-data">
            @Html.HiddenFor(model => model.RowVersion)
            <div asp-validation-summary="All" class="text-danger"></div>

            <div class="mb-3">
                <label asp-for="Title" class="form-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="Description" class="form-label"></label>
                <textarea asp-for="Description" class="form-control" rows="4"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="mb-3 form-check">
                <input class="form-check-input" type="checkbox" asp-for="IsPublic" />
                <label class="form-check-label" asp-for="IsPublic"></label>
            </div>

            <div class="mb-3">
                <label asp-for="ImageFile" class="form-label"></label>
                <input asp-for="ImageFile" class="form-control" type="file" accept="image/*">
            </div>

            @if (!string.IsNullOrEmpty(Model.ExistingImageUrl))
            {
                <div class="mb-3">
                    <label>Current Image</label>
                    <div>
                        <img src="@Model.ExistingImageUrl" class="img-thumbnail" style="max-width: 200px;" alt="Inventory Image" />
                    </div>
                </div>
            }

            <div class="mb-3">
                <label asp-for="Tags" class="form-label"></label>
                <input asp-for="Tags" class="form-control" id="tags-input" />
                <span asp-validation-for="Tags" class="text-danger"></span>
            </div>

            <div class="form-group mt-4">
                <input type="submit" value="Save" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(function() {
            function split(val) {
                return val.split(/,\s*/);
            }
            function extractLast(term) {
                return split(term).pop();
            }

            $("#tags-input")
                // don't navigate away from the field on tab when selecting an item
                .on("keydown", function(event) {
                    if (event.keyCode === $.ui.keyCode.TAB && $(this).autocomplete("instance").menu.active) {
                        event.preventDefault();
                    }
                })
                .autocomplete({
                    source: function(request, response) {
                        $.getJSON("/Inventories/SearchTags", {
                            term: extractLast(request.term)
                        }, response);
                    },
                    search: function() {
                        // custom minLength
                        var term = extractLast(this.value);
                        if (term.length < 1) {
                            return false;
                        }
                    },
                    focus: function() {
                        // prevent value inserted on focus
                        return false;
                    },
                    select: function(event, ui) {
                        var terms = split(this.value);
                        // remove the current input
                        terms.pop();
                        // add the selected item
                        terms.push(ui.item.value);
                        // add placeholder to get the comma-and-space at the end
                        terms.push("");
                        this.value = terms.join(", ");
                        return false;
                    }
                });
        });
    </script>
}