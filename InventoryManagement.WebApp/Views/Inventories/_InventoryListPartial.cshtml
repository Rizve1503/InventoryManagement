@model IEnumerable<InventoryManagement.Domain.Entities.Inventory>

@foreach (var item in Model)
{
    <tr>
        <td>@Html.DisplayFor(modelItem => item.Title)</td>
        <td>@(item.Description.Length > 100 ? item.Description.Substring(0, 100) + "..." : item.Description)</td>
        <td>
            @if (item.IsPublic)
            {
                <span class="badge bg-success">Public</span>
            }
            else
            {
                <span class="badge bg-secondary">Private</span>
            }
        </td>
        <td>@item.Items.Count</td>
        <td>@item.CreatedAt.ToShortDateString()</td>
        <td>
            <a asp-controller="Inventories" asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary">View</a>
            <a asp-controller="Items" asp-action="Index" asp-route-inventoryId="@item.Id" class="btn btn-sm btn-outline-primary">Items (@item.Items.Count)</a>
            <a asp-controller="Inventories" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-secondary">Settings</a>
            <a asp-controller="Inventories" asp-action="Fields" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info">Fields</a>
            <a asp-controller="Inventories" asp-action="CustomId" asp-route-id="@item.Id" class="btn btn-sm btn-outline-success">Custom ID</a>

        </td>
    </tr>
}