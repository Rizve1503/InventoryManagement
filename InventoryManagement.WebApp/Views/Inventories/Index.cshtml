@model IEnumerable<InventoryManagement.Domain.Entities.Inventory>

@{
    ViewData["Title"] = "My Inventories";
    var viewType = ViewBag.ViewType as string ?? "list";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>@ViewData["Title"]</h1>
    <div>
        <div class="btn-group" role="group">
            <button id="list-view-btn" type="button" class="btn @(viewType == "list" ? "btn-primary" : "btn-outline-primary")"><i class="bi bi-list-ul"></i></button>
            <button id="card-view-btn" type="button" class="btn @(viewType == "card" ? "btn-primary" : "btn-outline-primary")"><i class="bi bi-grid-3x3-gap-fill"></i></button>
        </div>
        <a asp-action="Create" class="btn btn-success ms-2">Create New Inventory</a>
    </div>
</div>

@if (!Model.Any())
{
    <div class="text-center"><p>You haven't created any inventories yet.</p></div>
}
else
{
    @* This container will hold either the table or the card grid *@
    <div id="inventory-container" class="@(viewType == "card" ? "row" : "")">
        @{
            string partialName = viewType == "card" ? "_InventoryCardPartial" : "_InventoryListPartial";
        }
        <partial name="@partialName" model="Model" />
    </div>

    @if (ViewBag.HasMoreInventories == true)
    {
        <div id="loading-indicator" class="text-center my-4" style="display: none;">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
}

@section Scripts {
    <script>
        $(document).ready(function () {
            let page = 2;
            let isLoading = false;
            let hasMore = @(ViewBag.HasMoreInventories.ToString().ToLower());
            let currentView = '@viewType';

            function setViewType(view) {
                // Set cookie that expires in 1 year
                document.cookie = `InventoryViewType=${view}; path=/; max-age=31536000`;
                currentView = view;
                $('#list-view-btn').toggleClass('btn-primary', view === 'list').toggleClass('btn-outline-primary', view !== 'list');
                $('#card-view-btn').toggleClass('btn-primary', view === 'card').toggleClass('btn-outline-primary', view !== 'card');
                $('#inventory-container').toggleClass('row', view === 'card');
            }

            $('#list-view-btn').on('click', function() {
                if (currentView !== 'list') {
                    setViewType('list');
                    // For simplicity, we just reload the page to switch the view
                    window.location.reload();
                }
            });

            $('#card-view-btn').on('click', function() {
                if (currentView !== 'card') {
                    setViewType('card');
                    window.location.reload();
                }
            });

            $(window).scroll(function () {
                if ($(window).scrollTop() + $(window).height() >= $(document).height() - 200 && !isLoading && hasMore) {
                    isLoading = true;
                    $('#loading-indicator').show();

                    // Pass the current view type to the AJAX call
                    $.get(`/Inventories/GetInventoriesPage?page=${page}&viewType=${currentView}`, function (data) {
                        if (data.trim().length > 0) {
                            $('#inventory-container').append(data);
                            page++;
                            isLoading = false;
                        } else {
                            hasMore = false;
                        }
                    }).always(function() {
                        $('#loading-indicator').hide();
                    });
                }
            });
        });
    </script>
}