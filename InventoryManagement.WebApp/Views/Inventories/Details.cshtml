@model Inventory

@{
    ViewData["Title"] = Model.Title;
}

<h1>@Model.Title</h1>
<p class="text-muted">Created by: @Model.Creator?.Name on @Model.CreatedAt.ToShortDateString()</p>
<p>@Model.Description</p>
<hr />

<div class="mt-4">
    <ul class="nav nav-tabs" id="inventoryTab" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="items-tab" data-bs-toggle="tab" data-bs-target="#items" type="button" role="tab">Items</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="discussion-tab" data-bs-toggle="tab" data-bs-target="#discussion" type="button" role="tab">Discussion</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="stats-tab" data-bs-toggle="tab" data-bs-target="#stats" type="button" role="tab">Stats</button>
        </li>
    </ul>
    <div class="tab-content" id="inventoryTabContent">
        <div class="tab-pane fade show active" id="items" role="tabpanel">
            <div class="p-3" id="items-container">
                <div class="text-center"><div class="spinner-border"></div></div>
            </div>
        </div>
        <div class="tab-pane fade" id="discussion" role="tabpanel">
            <div class="p-3">
                <div id="comments-container" class="mb-4">
                    <div class="text-center"><div class="spinner-border"></div></div>
                </div>

                @if (User.Identity.IsAuthenticated)
                {
                    <form id="comment-form" asp-controller="Comments" asp-action="Create" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="InventoryId" value="@Model.Id" />
                        <div class="mb-3">
                            <label for="comment-content" class="form-label">Leave a comment</label>
                            <textarea id="comment-content" name="Content" class="form-control" rows="3" required></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary">Post Comment</button>
                    </form>
                }
                else
                {
                    <div class="alert alert-info">
                        <a asp-controller="Account" asp-action="Login" asp-route-returnUrl="@Context.Request.Path">Sign in</a> to post a comment.
                    </div>
                }
            </div>
        </div>
        <div class="tab-pane fade" id="stats" role="tabpanel">
            <div class="p-3" id="stats-container">
                <div class="text-center">
                    <div class="spinner-border">
                    
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            const inventoryId = @Model.Id;
            const commentsContainer = $('#comments-container');
            const commentForm = $('#comment-form');
            const contentTextarea = $('#comment-content');
            const itemsContainer = $('#items-container');
            const statsContainer = $('#stats-container');

            function loadComments() {
                $.get(`/Comments/GetCommentsForInventory?inventoryId=${inventoryId}`, function(data) {
                    commentsContainer.html(data);
                });
            }

            function loadItems() {
                $.get(`/Inventories/GetItemsForInventory?inventoryId=${inventoryId}`, function(data) {
                    itemsContainer.html(data);
                });
            }

             function loadStats() {
                $.get(`/Inventories/GetStatsForInventory?inventoryId=${inventoryId}`, function(data) {
                    statsContainer.html(data);
                });
            }

            loadComments();
            loadItems();

            $('#stats-tab').on('shown.bs.tab', function () {
                loadStats();
            });

            if (@User.Identity.IsAuthenticated.ToString().ToLower()) {
                commentForm.on('submit', function(e) {
                    e.preventDefault();
                    const token = $(this).find('input[name="__RequestVerificationToken"]').val();
                    const formData = $(this).serialize();
                    $.ajax({
                        url: '/Comments/Create',
                        type: 'POST',
                        data: formData,
                        headers: { 'RequestVerificationToken': token },
                        success: function(newCommentHtml) {
                            commentsContainer.append(newCommentHtml);
                            contentTextarea.val('');
                        },
                        error: function() { alert('Error posting comment.'); }
                    });
                });

                itemsContainer.on('click', '.like-btn', function() {
                    const button = $(this);
                    const itemId = button.data('item-id');
                    $.ajax({
                        url: '/api/Likes/ToggleLike',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({ itemId: itemId }),
                        success: function(response) {
                            button.find('.like-count').text(response.count);
                            if (response.liked) {
                                button.removeClass('btn-outline-primary').addClass('btn-primary');
                            } else {
                                button.removeClass('btn-primary').addClass('btn-outline-primary');
                            }
                        },
                        error: function() { alert('An error occurred.'); }
                    });
                });

                setInterval(loadComments, 7000);
            }

        });
    </script>
}